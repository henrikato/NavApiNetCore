// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nav.Repositorio.Contexto;

namespace Nav.Repositorio.Migrations
{
    [DbContext(typeof(MainContext))]
    [Migration("20190603163725_V1")]
    partial class V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Nav.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CondutorId");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<DateTime>("DataNascimento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("NumeroTelefone")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("CondutorId")
                        .IsUnique()
                        .HasFilter("[CondutorId] IS NOT NULL");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Nav.Dominio.Entidades.Usuario", b =>
                {
                    b.HasOne("Nav.Dominio.Entidades.Usuario", "Condutor")
                        .WithOne("Responsavel")
                        .HasForeignKey("Nav.Dominio.Entidades.Usuario", "CondutorId");
                });
#pragma warning restore 612, 618
        }
    }
}
